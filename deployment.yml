apiVersion: v1
kind: Namespace
metadata:
  name: nc1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
  namespace: nc1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      serviceAccountName: sa-cron-runner
      containers:
      - name: nginx
        image: nginx:latest
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        ports:
        - containerPort: 80
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - nginx
              topologyKey: topology.kubernetes.io/zone
---     
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-cron-runner
  namespace: nc1
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cron-runner
  namespace: nc1
rules:
- apiGroups: ["apps","extensions"]
  resources: ["deployments","deployments/scale"]
  verbs: ["get","list","patch", "update","create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cron-runner
  namespace: nc1
subjects:
- kind: ServiceAccount
  name: sa-cron-runner
roleRef:
  kind: Role
  name: cron-runner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: up-scale-nginx-deployment
  namespace: nc1
spec:
  schedule: "0 9 * * *"
  successfulJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        spec:
          serviceAccountName: sa-cron-runner
          containers:
            - name: up-scale-deployment
              image: bitnami/kubectl
              command: ["kubectl"]
              args:
              - scale
              - deployment/nginx-deployment
              - --replicas=3
              name: kubectl
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: down-scale-nginx-deployment
  namespace: nc1
spec:
  schedule: "0 23 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        spec:
          serviceAccountName: sa-cron-runner
          containers:
            - name: down-scale-deployment
              image: bitnami/kubectl
              command: ["kubectl"]
              args:
              - scale
              - deployment/nginx-deployment
              - --replicas=1
              name: kubectl
          restartPolicy: OnFailure
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-hpa
  namespace: nc1
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx-deployment
  minReplicas: 1
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 85
  - type: Resource
    resource:
      name: memory
      target:
        type: AverageValue
        averageValue: 128M
